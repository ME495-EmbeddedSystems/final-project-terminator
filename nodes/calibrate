#!/usr/bin/env python
"""
Functions are split between what should go to commander and what should become a script
"""

import rospy
import roslib
import sys
import time
import actionlib
import moveit_commander
#
# import baxter_interface
# from baxter_interface import Gripper, CHECK_VERSION

import cv2
import cv_bridge

from sensor_msgs.msg import Image


def enableBaxter():
    """
    COMMANDER
    """
    baxter_interface.RobotEnable().enable()
    rospy.sleep(0.25)
    print("Baxter is enabled")

def enableFace(face):
    """
    COMMANDER
    """
    img = cv2.imread(face)
    msg = cv_bridge.CvBridge().cv2_to_imgmsg(img, encoding="bgr8")
    pub = rospy.Publisher('/robot/xdisplay', Image, latch=True, queue_size=1)
    pub.publish(msg)
    # Sleep to allow for image to be published.
    rospy.sleep(1)

def calibrateGripper(side):
    """
    SCRIPT

    Define gripper
    Reboot gripper
    Calibrate gripper
    Open gripper
    """

    gripper = Gripper(side, CHECK_VERSION)
    gripper.reboot()
    gripper.calibrate()
    gripper.open()

def main():
    """
    + Initializes joint_state_topic
    + Calibrates grippers
    """

    face = '/config/time_cop.jpg'

    enableBaxter()
    # enableFace(face)

    joint_state_topic = ['joint_states:=/robot/joint_states']
    moveit_commander.roscpp_initialize(joint_state_topic)

    calibrateGripper('left')
    calibrateGripper('right')

if __name__ == "__main__":
    main()
